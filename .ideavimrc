" --------------------------------------------------------------------------------------------
" Main Configuration - https://github.com/JetBrains/ideavim/blob/master/doc/set-commands.md
" --------------------------------------------------------------------------------------------

" Clear search input
let @/ = "" 
" Alt key for mac
for i in range(97,122)
  let c = nr2char(i)
  exec "map \e".c." <M-".c.">"
  exec "map! \e".c." <M-".c.">"
endfor

" Main mappers
let mapleader = " "
imap jj <esc>

" Basic stuff
set smartcase " no ignore case when pattern is uppercase
set scroll=8 " lines to scroll with CTRL-U and CTRL-D
set scrolloff=8 " minimum number of lines above and below the cursor
set visualbell " Use visual bell instead of beeping
set backspace=indent,eol,start
set clipboard=unnamed
set clipboard+=ideaput
set hlsearch " highlight matches with the last search pattern
set incsearch " show where search pattern typed so far matches

" Idea specific settings
set ideamarks " Sync IJ bookmarks and Vim marks
set ideajoin " Join command will be performed via IDE
set idearefactormode=keep " Mode on refactoring (keep / select / visual)

" Map hide current search highlight
nmap <leader>, :nohlsearch<cr>

" Remap Undo
map U <C-R>

" Remap Newline
nmap o o<Esc>
nmap O O<Esc>

" Replace currently selected text with default register
" Without yanking it
vnoremap p "_dP

" Delete without yanking
nnoremap d "_d
vnoremap d "_d


" --------------------------------------------------------------------------------------------
" Plugins - https://github.com/JetBrains/ideavim/wiki/IdeaVim-Plugins
" --------------------------------------------------------------------------------------------

set highlightedyank
set NERDTree " Tips : When on project tree, type <o> to open and <x> to close. Use <maj> to do it recursively.

set easymotion " https://github.com/AlexPl292/IdeaVim-EasyMotion
map <leader>f <plug>(easymotion-f)
map <leader>F <plug>(easymotion-F)

set multiple-cursors
nmap mc <Plug>NextWholeOccurrence
xmap mc <Plug>NextWholeOccurrence
nmap gmc <Plug>NextOccurrence
xmap gmc <Plug>NextOccurrence
xmap mx <Plug>SkipOccurrence
xmap mr <Plug>RemoveOccurrence
nmap mC <Plug>AllWholeOccurrences
xmap mC <Plug>AllWholeOccurrences
nmap gmC <Plug>AllOccurrences
xmap gmC <Plug>AllOccurrences


" --------------------------------------------------------------------------------------------
" Navigation
" --------------------------------------------------------------------------------------------

" Tree mode
map <C-j> <Action>(Tree-selectNext)
map <C-k> <Action>(Tree-selectPrevious)

" Go to next/previous word
nnoremap <C-h> b
nnoremap <C-l> w
vnoremap <C-h> b
vnoremap <C-l> w
nnoremap <C-S-h> B
nnoremap <C-S-l> W
vnoremap <C-S-h> B
vnoremap <C-S-l> W

" Insert Mode
inoremap <C-h> <Left>
inoremap <C-j> <Down>
inoremap <C-k> <Up>
inoremap <C-l> <Right>
cnoremap <C-h> <Left>
cnoremap <C-j> <Down>
cnoremap <C-k> <Up>
cnoremap <C-l> <Right>

" Scroll
nnoremap <C-j> <C-e><C-e>
nnoremap <C-k> <C-y><C-y>

" Windows Split
map <leader>k <Action>(PrevSplitter)
map <leader>j <Action>(NextSplitter)
map <leader>sr <Action>(MoveTabRight)
map <leader>sl <Action>(MoveTabLeft)
map <leader>sm <Action>(MoveEditorToOppositeTabGroup)

" Close Windows
map <leader>q <Action>(CloseEditor)
map <leader>Q <Action>(CloseAllEditors)
map <leader>w <Action>(CloseAllEditorsButActive)

" Go to Error
nmap <leader>e <Action>(GotoNextError)
nmap <leader>E <Action>(GotoPreviousError)

" Go to declaration / implementation
nmap <leader>o <Action>(GotoDeclaration)
nmap <leader>O <Action>(GotoImplementation)


" --------------------------------------------------------------------------------------------
" Manipulations
" --------------------------------------------------------------------------------------------

" Comment line & block
map ,cl <Action>(CommentByLineComment)
vmap ,cb <Action>(CommentByBlockComment)

" Select all
nmap <leader>a <Action>($SelectAll)

" Duplicate line
nmap <leader>d <Action>(EditorDuplicate)

" Move line
map <S-A-K> <Action>(MoveLineUp)
map <S-A-J> <Action>(MoveLineDown)


" --------------------------------------------------------------------------------------------
" IDEA commands
" --------------------------------------------------------------------------------------------

map <leader>R <Action>(Run)
map <leader>S <Action>(Stop)

" Gradle
map <leader>b <Action>(MakeGradleProject)
map <leader>B <Action>(RebuildGradleProject)
map <leader>c <Action>(CleanGradleProject)
map <leader>g <Action>(Android.SyncProject)

" Vim
nmap <leader>t <Action>(VimFindActionIdAction)
nmap <leader>v <Action>(IdeaVim.ReloadVimRc.reload)

" Popups stuff
map <leader>u <Action>(FileStructurePopup)
map <leader>I <Action>(ShowErrorDescription)
map <leader>i <Action>(QuickJavaDoc)
map <leader>p <Action>(ParameterInfo)
map <leader>h <Action>(RecentFiles)

" Refactoring
nmap <leader>re <Action>(RenameElement)
nmap <leader>rs <Action>(ChangeSignature)
vmap <leader>rf <Action>(ExtractFunction)

" Expend / collapse code
nmap ,ec <Action>(CollapseRegion)
nmap ,eC <Action>(CollapseAllRegions)
nmap ,ee <Action>(ExpandRegion)
nmap ,eE <Action>(ExpandAllRegions)

" Manage Windows
nmap <leader>l <Action>(HideAllWindows)


" --------------------------------------------------------------------------------------------
" Git commands
" --------------------------------------------------------------------------------------------

nmap ,gcb <Action>(Git.CompareWithBranch)
